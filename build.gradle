buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

configurations {
    deployerJars
    packed
    compile.extendsFrom packed    
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'forge'
apply plugin: 'maven'

version = "1.0"
group= "com.yourname.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "modid"

dependencies {
    packed 'org.apache.commons:commons-math3:3.2'
    packed 'org.jfree:jcommon:1.0.21'
    packed 'org.jfree:jfreechart:1.0.17'
    packed 'com.miglayout:miglayout-swing:4.2'
    packed 'net.sf.opencsv:opencsv:2.3'
    deployerJars "org.apache.maven.wagon:wagon-ssh:2.2"
}

minecraft {
    version = "1.7.2-10.12.1.1065"
    assetDir = "eclipse/assets"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar
{
    // packs a bunch of stuff into my jar.
    // everything marked as packed
    from {
        configurations.packed.collect {
            it.isDirectory() ? it : zipTree(it).matching {
                exclude "META-INF", "META-INF/**", "*META-INF*", "meta-inf"
                exclude "**.jar", "**/*.jar", "*.jar"
            }
        }
    }
}